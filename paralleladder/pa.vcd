$date
  Wed Sep 21 09:06:49 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # s[3:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module parallel_adder $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 4 ( s[3:0] $end
$var reg 1 ) cin $end
$var reg 1 * cout $end
$upscope $end
$enddefinitions $end
#0
b0101 !
b0100 "
b1001 #
0$
0%
b0101 &
b0100 '
b1001 (
0)
0*
#20000000
b1101 !
b0011 "
b0001 #
1$
1%
b1101 &
b0011 '
b0001 (
1)
1*
#40000000
b1100 !
b1001 "
b0110 #
b1100 &
b1001 '
b0110 (
#60000000
b1010 !
b0100 #
b1010 &
b0100 (
#80000000
